/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define SYM     1
#define NAV     2
#define NUM     3
#define WIN     4

&mt {
    tapping-term-ms = <180>;
};

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <170>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        combos {
            compatible = "zmk,combos";
            combo_capsword {
                timeout-ms = <50>;
                key-positions = <16 19>;
                bindings = <&caps_word>;
          };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  |   BSPC    |
// |  ESC |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
// |      |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  |   RET     |
//                         | NUM | SYM | SPC/NAV | WIN |
                        bindings = <
   &kp TAB &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI  &kp BSPC
   &kp ESC &hm LCTRL A &hm LALT R &hm LGUI S &hm LSHFT T &kp G   &kp M &hm RSHFT N  &hm RGUI E &hm LALT I &hm RCTRL O &kp SQT
   &none   &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp RET
                        &mo NUM  &mo SYM &lt NAV SPACE &mo WIN &none
                        >;
                };

                sym_layer {
// ----------------------------------------------------------------------------
// |    |  !  |  @  |  {  |  }  | "|" |   |  &  |  *  |  <  |  >  |     |     |
// |    |  #  |  $  |  (  |  )  |  `  |   |  -  |  =  |  +  |  _  |     |     |
// |    |  %  |  ^  |  [  |  ]  |  ~  |   |  /  |     |     |     |     |     |
//                       |     |     |     |    |     |
                        bindings = <
   &trans &kp EXCL  &kp AT   &kp LBRC &kp RBRC &kp PIPE        &kp AMPS &kp ASTRK &kp LT  &kp GT  &trans     &trans
   &trans &kp HASH  &kp DLLR &kp LPAR &kp RPAR &kp GRAVE       &kp MINUS &kp EQUAL &kp PLUS &kp UNDER &trans &trans
   &trans &kp PRCNT &kp CARET &kp LBKT &kp RBKT &kp TILDE      &kp BSLH &none  &trans &trans &trans &trans
                                 &trans      &trans       &trans         &trans   &trans
                        >;
                };

                nav_layer {
// ----------------------------------------------------------------------------------
// |    |     |     |     |     |     |   |     |     | PGUP | UP |      | INS | DEL |
// |    | CTRL| ALT | GUI | SHFT|     |   |     | HOME| LEFT |DOWN|RIGHT | END |     |
// |MENU| UNDO| CUT |COPY |     | PSTE|   |     | <tab| PGDN |    |      | tab>|     |
//                       |     |     |     |    |     |
                        bindings = <
   &trans &none     &none     &none     &none     &none         &none &kp PG_UP &kp UP &none &kp INS &kp DEL
   &trans &kp LCTRL &kp LALT  &kp LGUI  &kp LSHFT &none         &kp HOME &kp LEFT &kp DOWN &kp RIGHT &kp END &none
   &kp K_APP &kp LC(Z) &kp LC(X) &kp LC(C) &none &kp LC(V)         &kp LS(LC(TAB)) &kp PG_DN &none &none &kp LC(TAB) &none
                                &trans      &trans         &trans        &trans     &trans
                        >;
                };

                num_layer {
// ----------------------------------------------------------------------------
// |    | F1  | F2  | F3  | F4  |     |   |     |  7  |  8  |  9  |     |     |
// |    | F5  | F6  | F7  | F8  |     |   |     |  4  |  5  |  6  |     |     |
// |    | F9  | F10 | F11 | F12 |     |   |     |  1  |  2  |  3  |     |     |
//                       |     |     |     | 0  |  .  |
                        bindings = <
   &trans &kp F1    &kp F2    &kp F3    &kp F4    &none         &none     &kp N7    &kp N8    &kp N9    &none     &trans
   &trans &kp F5    &kp F6    &kp F7    &kp F8    &none         &none     &kp N4    &kp N5    &kp N6    &none     &none
   &trans &kp F9    &kp F10   &kp F11   &kp F12   &none         &none     &kp N1    &kp N2    &kp N3    &none     &none
                                &trans      &trans         &trans          &kp N0      &kp DOT
                        >;
                };


                win_layer {
// -----------------------------------------------------------------------------------------------------------------------------
// | RESET    | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |         |   |         | WIN TL| WIN U | WIN TR  | WIN LG  | ZOOM + |
// | RGB TOG  | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI+ |         |   |         | WIN L | WIN D | WIN R   | WIN FUL | PSCRN  |
// | BT_CLR   | BT 0     | BT 1     | UG COLOR |          |         |   |         | WIN BL|       | WIN BR  | WIN SM  | ZOOM - |
//                                              |     |     |     |     |     |
                        bindings = <
   &reset &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none            &none &kp LC(LA(U)) &kp LC(LA(UP)) &kp LC(LA(I)) &kp LC(LA(EQUAL)) &kp LC(EQUAL)
   &rgb_ug RGB_TOG &kp K_PREV  &kp K_PP &kp K_NEXT &rgb_ug RGB_EFR &none   &none &kp LC(LA(LEFT)) &kp LC(LA(DOWN)) &kp LC(LA(RIGHT)) &kp LC(LA(RET)) &kp LG(LS(N5))
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &rgb_ug RGB_COLOR_HSB(128,100,100) &none &none     &none &kp LC(LA(J)) &none &kp LC(LA(K)) &kp LC(LA(MINUS)) &kp LC(MINUS)
                                     &trans      &trans       &trans        &trans      &trans
                        >;
                };
        };

};
